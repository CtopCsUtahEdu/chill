

check
{[i,j] -> [i] }

check
{[i,j] -> [j] }

y
check
{[i,j]->[r2] : r2 = col(j)}
IS_for_iegen   { Sym=[index_(i),index__(i),n] [i,j] : index_(i) <= j < index__(i) && 0 <= i < n }

{[i,j]  : index_(i) <= j && j < index__(i) && 0 <= i && i < n}

*** flattened_index   { Sym=[nnz] [coalesced_index] : 0 <= coalesced_index < nnz }

{[coalesced_index] : 0 <= coalesced_index && coalesced_index < nnz}

*** r1   { Sym=[c(i,j)] [i,j] -> [coalesced_index] : coalesced_index = c(i,j) }

{[i,j]  -> [coalesced_index] : coalesced_index = c(i,j)}
{ [i, j] -> [coalesced_index] : coalesced_index - c(i, j) = 0 }{ [coalesced_index] -> [i, j] : coalesced_index - c(i, j) = 0 }

*** flattened_IS   { Sym=[c(i,j)] [i,j,coalesced_index] : i = 0 && j = 0 && 0 <= coalesced_index < c(i,j) }

{ Sym=[c(i,j)] [i,j,coalesced_index] : i = 0 && j = 0 && 0 <= coalesced_index < c(i,j) }
{[In_1,In_2,In_3] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7] : 1 = Out_2 && 1 = Out_4 && In_3 = Out_6 && 1 = Out_1 && 1 = Out_3 && 1 = Out_5 && 1 = Out_7 }

*** flattened_xform   {[In_1,In_2,In_3] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7] : In_3 = Out_6 && Out_4 = 1 && Out_2 = 1 && Out_1 = 1 && Out_3 = 1 && Out_5 = 1 && Out_7 = 1 }


*** mapping1   { Sym=[c(In_1,In_2)] [In_1,In_2,In_3] -> [Out_1,Out_2,Out_3] : Out_1 = 1 && Out_2 = 1 && In_3 = Out_3 && Out_3 <= c(In_1,In_2) }


*** mapping2   { Sym=[c(i,j)] [i,j,coalesced_index] -> [chill_t1,chill_t2,chill_t3] : chill_t1 = 1 && chill_t2 = 1 && coalesced_index = chill_t3 && chill_t3 <= c(i,j) }

{[i,j] -> [j] }

sanity check
j
c
coalesced_index

{[i,j] -> [i] }

sanity check
i
c
coalesced_index

{[i,j]->[r2] : r2 = col(j)}
sanity check
j
c
coalesced_index
Success

{ Sym=[c(i,j)] [i,j,coalesced_index] -> [chill_t1,chill_t2,chill_t3] : chill_t1 = 1 && chill_t2 = 1 && coalesced_index = chill_t3 && chill_t3 <= c(i,j) and i = 0 && j = 0 && 0 <= coalesced_index < c(i,j) }

NULL Rel_Body


*** mapping3   NULL Rel_Body


*** mapping   {[In_1,In_2,In_3] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7] : In_1 = Out_2 && In_2 = Out_4 && In_3 = Out_6 && 1 = Out_1 && 1 = Out_3 && 1 = Out_5 && 1 = Out_7 }


*** known     { Sym=[index_(i),index__(i),c(i,j)] [i,j,In_3,In_4,In_5] : index_(i) < index__(i) and 4096 <= c(i,j) }

